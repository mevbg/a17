//====================================================|
// SWITCHER


//--------------------------| Data

$roles: 'main' 'lights' 'outlets' 'unknown' 'cooking' 'air_con' 'laundry' 'boiler' 'heating' 'panel';


//--------------------------| Variables

$wing-width: get-em-unit($roles-size-switcher-width);
$lever-height: 1em;
$hover-color: map-get($reg-colors, 'orange-light');
$marked-color: map-get($reg-colors, 'graphite');
$selected-color: map-get($reg-colors, 'graphite');
$shadow: 0 0 0.4em map-get($reg-colors, 'graphite');
$transition: all map-get($roles-transitions, 'glow') ease-in-out;


//--------------------------| Root

.root {
  position: relative;
  display: block;
  height: get-em-unit($roles-size-switcher-height);
  border: 1px solid map-get($reg-colors, 'silver');
  border-radius: 0.15em;
  transition: $transition;

  &,
  * {
    cursor: pointer;
  }

  // Background
  &:not([data-color='black']) {
    background-image: map-get($reg-gradients, 'pale-silver');
  }

  &[data-color='black'] {
    background-image: map-get($reg-gradients, 'dark-silver');
  }
}


//--------------------------| Wings

@each $wing in 1 2 3 {
  $gap: if($wing == 1, 0, $wing / 2);

  .root[data-wings='#{$wing}'] {
    width: get-em-unit(($roles-size-switcher-width + $gap) * $wing);
  }
}


//--------------------------| Lever

.lever {
  position: absolute;
  top: 50%;
  left: -1px;
  width: $wing-width;
  padding: 0 0.14em;
  transition: $transition;
  transform: translateY(-#{$lever-height/2});

  .root:not([data-weight='fat']) & {
    height: $lever-height;
  }

  .root[data-weight='fat'] & {
    height: $lever-height * 2;
  }

  .root[data-role='main'] & {
    left: 0;
    width: 100%;
  }
}


//--------------------------| Bar

.bar {
  display: block;
  height: 100%;
  border-radius: 0.15em;

  .root:not([data-color='black']) .lever & {
    background-image: map-get($reg-gradients, 'orange');
  }

  .root[data-color='black'] .lever & {
    background-image: map-get($reg-gradients, 'black');
  }
}


//--------------------------| Label

.label {
  position: absolute;
  right: 0;
  bottom: 0.1em;
  left: 0;
  text-align: center;
}


//--------------------------| Roles

.root[data-role] {
  &::before {
    $size: 1em;

    position: absolute;
    top: 0.32em;
    left: 50%;
    width: $size;
    height: $size;
    content: '';
    background-repeat: no-repeat;
    background-position: center;
    opacity: 0;
    transition: $transition;
    transform: translateX(-50%);
  }
}

@each $role in $roles {
  $url: '../../../../assets/icons/#{$role}.svg';

  [data-role='#{$role}'] {
    &::before {
      background-image: url($url);
    }
  }
}


//--------------------------| States

.root.marked {
  border-color: $marked-color;
  box-shadow: $shadow;

  &::before {
    opacity: 0.5;
  }

  .lever {
    transform: translateY(-#{$lever-height * 1.2});
  }
}

.root.selected {
  border-color: $selected-color;

  &::before {
    opacity: 0.5;
  }

  .lever {
    transform: translateY(-#{$lever-height * 1.2});
  }
}

@media (hover: hover) {
  .root {
    &:hover {
      border-color: $hover-color;

      &::before {
        opacity: 0.5;
      }
    }
  }
}
